AWSTemplateFormatVersion: "2010-09-09"
Description: API Gateway for the environment
Parameters:
  RegionCertARN:
    Type: String
    Description: Provide ARN  for the SSL certificate located in the same region
Resources:
    ApiGatewayResourceRecomm:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "recommender"
            ParentId: !GetAtt ApiGatewayRestApi.RootResourceId

    ApiGatewayResourceRecommProxy:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "{proxy+}"
            ParentId: !Ref ApiGatewayResourceRecomm

    ApiGatewayResourceApidocs:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "api-docs"
            ParentId: !GetAtt ApiGatewayRestApi.RootResourceId

    ApiGatewayResourceImages:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "images"
            ParentId: !GetAtt ApiGatewayRestApi.RootResourceId

    ApiGatewayResourceProxy0:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "{proxy+}"
            ParentId: !Ref ApiGatewayResourceApidocs

    ApiGatewayResourceProxy1:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "{proxy+}"
            ParentId: !GetAtt ApiGatewayRestApi.RootResourceId

    ApiGatewayResourceProxy3:
        Type: "AWS::ApiGateway::Resource"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            PathPart: "{proxy+}"
            ParentId: !Ref ApiGatewayResourceImages

    ApiGatewayRestApi:
        Type: "AWS::ApiGateway::RestApi"
        Properties:
            BinaryMediaTypes:
            - "image/jpeg"
            - "image/jpg"
            - "image/png"
            - "image/gif"
            - "multipart/form-data"
            
            DisableExecuteApiEndpoint : "true"
            Name: "api-dev2"
            ApiKeySourceType: "HEADER"
            EndpointConfiguration: 
                Types: 
                  - "REGIONAL"


    Deployment:
      Type: 'AWS::ApiGateway::Deployment'
      Properties:
        RestApiId: !Ref ApiGatewayRestApi
        Description: My deployment
      DependsOn:
        - "ApiGatewayMethod0"
        - "ApiGatewayMethod"
        - "ApiGatewayMethod2"
        # - "ApiGatewayMethod3"
        - "ApiGatewayMethod4"

    ApiGatewayStage:
        Type: "AWS::ApiGateway::Stage"
        Properties:
            StageName: "v1"
            DeploymentId: !Ref Deployment
            RestApiId: !Ref ApiGatewayRestApi
            CacheClusterEnabled: false
            MethodSettings: 
              - ResourcePath: "/*"
                HttpMethod: "*"
                MetricsEnabled: false
                DataTraceEnabled: false
                CachingEnabled: false
                # some useful parameters but not needed now.
                # MetricsEnabled: false
                # ThrottlingBurstLimit: 5000
                # ThrottlingRateLimit: 10000
            TracingEnabled: false

    ApiGatewayMethod0:
    
        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            ResourceId: !Ref ApiGatewayResourceRecommProxy
            HttpMethod: "ANY"
            AuthorizationType: "NONE"
            ApiKeyRequired: false
            RequestParameters: 
                "method.request.path.proxy": true
            MethodResponses: 
              - 
                ResponseModels: 
                    "application/json": !Ref ApiGatewayModel2
                StatusCode: "200"
            Integration: 
                CacheKeyParameters: 
                  - "method.request.path.proxy"
                CacheNamespace: !Ref ApiGatewayResourceRecomm
                ConnectionId: !ImportValue jy-apigateway-vpclink-stg3
                ConnectionType: "VPC_LINK"
                IntegrationHttpMethod: "ANY"
                IntegrationResponses: 
                  - StatusCode: "200"
                PassthroughBehavior: "WHEN_NO_MATCH"
                RequestParameters: 
                    "integration.request.path.proxy": "method.request.path.proxy"
                TimeoutInMillis: 29000
                Type: "HTTP_PROXY"
                Uri: !Sub 
                - "http://${mlurl}/recommender/{proxy}"
                - mlurl: !ImportValue jy-branstalkmlseverurl-stg3

    ApiGatewayMethod:

        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            ResourceId: !Ref ApiGatewayResourceProxy0
            HttpMethod: "GET"
            AuthorizationType: "NONE"
            ApiKeyRequired: false
            RequestParameters: 
                "method.request.path.proxy": true
            MethodResponses: 
              - 
                ResponseModels: 
                    "application/json": !Ref ApiGatewayModel2
                StatusCode: "200"
            Integration: 
                CacheKeyParameters: 
                  - "method.request.path.proxy"
                CacheNamespace: !Ref ApiGatewayResourceProxy0
                ConnectionId: !ImportValue jy-apigateway-vpclink-stg3
                ConnectionType: "VPC_LINK"
                IntegrationHttpMethod: "GET"
                IntegrationResponses: 
                  - StatusCode: "200"
                PassthroughBehavior: "WHEN_NO_MATCH"
                RequestParameters: 
                    "integration.request.path.proxy": "method.request.path.proxy"
                TimeoutInMillis: 29000
                Type: "HTTP_PROXY"
                #Uri: !Sub "http://app-stage-backend-api.${AWS::Region}.elasticbeanstalk.com/api-docs/{proxy}"
                Uri: !Sub 
                - "http://${apiurl}/api-docs/{proxy}"
                - apiurl: !ImportValue jy-branstalkapiseverurl-stg3

    ApiGatewayMethod2:
        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            ResourceId: !Ref ApiGatewayResourceProxy1
            HttpMethod: "ANY"
            AuthorizationType: "NONE"
            ApiKeyRequired: false
            RequestParameters: 
                "method.request.path.proxy": true
            Integration: 
                CacheKeyParameters: 
                  - "method.request.path.proxy"
                CacheNamespace: !Ref ApiGatewayResourceProxy1
                ConnectionId: !ImportValue jy-apigateway-vpclink-stg3
                ConnectionType: "VPC_LINK"
                IntegrationHttpMethod: "ANY"
                IntegrationResponses: 
                  - StatusCode: "200"
                PassthroughBehavior: "WHEN_NO_MATCH"
                RequestParameters: 
                    "integration.request.path.proxy": "method.request.path.proxy"
                TimeoutInMillis: 29000
                Type: "HTTP_PROXY"
                # Uri: !Sub "http://app-stage-backend-api.${AWS::Region}.elasticbeanstalk.com/{proxy}"
                Uri: !Sub 
                - "http://${apiurl}/{proxy}"
                - apiurl: !ImportValue jy-branstalkapiseverurl-stg3

    # ApiGatewayMethod3:
    #     Type: "AWS::ApiGateway::Method"
    #     Properties:
    #         RestApiId: !Ref ApiGatewayRestApi
    #         ResourceId: !Ref ApiGatewayResourceProxy2
    #         HttpMethod: "ANY"
    #         AuthorizationType: "NONE"
    #         ApiKeyRequired: false
    #         RequestParameters: 
    #             "method.request.path.proxy": true
    #         Integration: 
    #             CacheKeyParameters: 
    #               - "method.request.path.proxy"
    #             CacheNamespace: !Ref ApiGatewayResourceProxy2
    #             ConnectionId: "w2olxp"
    #             ConnectionType: "VPC_LINK"
    #             IntegrationHttpMethod: "ANY"
    #             IntegrationResponses: 
    #               - 
    #                 ResponseTemplates: {}
    #                 StatusCode: "200"
    #             PassthroughBehavior: "WHEN_NO_MATCH"
    #             RequestParameters: 
    #                 "integration.request.path.proxy": "method.request.path.proxy"
    #             TimeoutInMillis: 29000
    #             Type: "HTTP_PROXY"
    #             Uri: !Sub "http://app-stage-recommendation-engine.${AWS::Region}.elasticbeanstalk.com/recommender/{proxy}"

    ApiGatewayMethod4:
        Type: "AWS::ApiGateway::Method"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            ResourceId: !Ref ApiGatewayResourceProxy3
            HttpMethod: "GET"
            AuthorizationType: "NONE"
            ApiKeyRequired: false
            RequestParameters: 
                "method.request.path.proxy": true
            MethodResponses: 
              - 
                ResponseModels: 
                    "application/json": !Ref ApiGatewayModel2
                StatusCode: "200"
            Integration: 
                CacheKeyParameters: 
                  - "method.request.path.proxy"
                CacheNamespace: !Ref ApiGatewayResourceProxy3
                ConnectionId: !ImportValue jy-apigateway-vpclink-stg3
                ConnectionType: "VPC_LINK"
                IntegrationHttpMethod: "GET"
                IntegrationResponses: 
                  - StatusCode: "200"
                PassthroughBehavior: "WHEN_NO_MATCH"
                RequestParameters: 
                    "integration.request.path.proxy": "method.request.path.proxy"
                TimeoutInMillis: 29000
                Type: "HTTP_PROXY"
                # Uri: !Sub "http://app-stage-backend-api.${AWS::Region}.elasticbeanstalk.com/images/{proxy}"
                Uri: !Sub 
                - "http://${apiurl}/images/{proxy}"
                - apiurl: !ImportValue jy-branstalkapiseverurl-stg3

    # ApiGatewayV2ApiMapping:
    #     Type: "AWS::ApiGatewayV2::ApiMapping"
    #     Properties:
    #         ApiId: !Ref ApiGatewayRestApi
    #         DomainName: "dev2.somethingweird.tech"
    #         Stage: !Ref ApiGatewayStage
    #         ApiMappingKey: ""

    ApiGatewayBasePathMapping:
        Type: "AWS::ApiGateway::BasePathMapping"
        Properties:
            BasePath: "(none)"
            DomainName: "dev2.somethingweird.tech"
            RestApiId: !Ref ApiGatewayRestApi
            Stage: !Ref ApiGatewayStage

    ApiGatewayDomainName:
        Type: "AWS::ApiGateway::DomainName"
        Properties:
            DomainName: "dev2.somethingweird.tech"
            EndpointConfiguration: 
                Types: 
                  - "REGIONAL"
            MutualTlsAuthentication:
                TruststoreUri: "s3://app-setup/truststore-dev/root-ca-dev-bundle02.txt"
            SecurityPolicy: "TLS_1_2"
            # RegionalCertificateArn: "arn:aws:acm:us-west-2:949501214913:certificate/f906fd98-7527-4956-9962-9d11e0473849"
            RegionalCertificateArn: !Ref RegionCertARN
            # SecurityPolicy: 
            #     TruststoreUri: "s3://app-setup/truststore-dev/root-ca-dev-bundle02.txt"

    ApiGatewayModel:
        Type: "AWS::ApiGateway::Model"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            Name: "Error2"
            Description: "This is a default error schema model"
            Schema: |
                {
                  "$schema" : "http://json-schema.org/draft-04/schema#",
                  "title" : "Error Schema",
                  "type" : "object",
                  "properties" : {
                    "message" : { "type" : "string" }
                  }
                }
            ContentType: "application/json"

    ApiGatewayModel2:
        Type: "AWS::ApiGateway::Model"
        Properties:
            RestApiId: !Ref ApiGatewayRestApi
            Name: "Empty2"
            Description: "This is a default empty schema model"
            Schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title" : "Empty Schema",
                  "type" : "object"
                }
            ContentType: "application/json"


