---
AWSTemplateFormatVersion: '2010-09-09'
Description: creates policy and role needed to get access to user profile picture bucket. 
Resources:
  CFNUserPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: policy-ec2-api-server-s3-acccess-dev
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - kms:*
          - s3:ListBucket
          - s3:DeleteObject
          Resource:
          # profile picture bucket name
          - arn:aws:s3:::jy-user-profile-picture-bucket-dev/*
          - arn:aws:s3:::jy-user-profile-picture-bucket-dev
          - arn:aws:kms:*:949501214913:alias/key-user-profile-bucket-dev
          - !ImportValue  jy-s3profilebucketkey-dev
          # Resource: '*'
      Roles: 
      - Ref: Ec2APIServerAccessRole

  Ec2APIServerAccessRole: 
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "instance-role-api-server-dev"
      # below 3 are default roles bs needs.
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
      - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"

  Ec2GenericAccessRole: 
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "instance-role-ec2-generic-dev"
      # below 3 are default roles bs needs.
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
      - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
      - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"


Outputs:
  jyec2apiserverrolename:
    Description: This is the role we should use for ec2 instance of API Server
    Value: !Ref Ec2APIServerAccessRole
    Export: 
      Name: jy-ec2apiserverrolename-dev

  jyec2genericrolename:
    Description: This is the role we should use for ec2 instance of all non api servers
    Value: !Ref Ec2GenericAccessRole
    Export: 
      Name: jy-ec2genericrolename-dev